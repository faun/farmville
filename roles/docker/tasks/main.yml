---
- set_fact: longsleep=false
- set_fact: longsleep=true
  when: "'longsleep' in ansible_kernel"

- set_fact: hypriot=false
- set_fact: hypriot=true
  when: "'hypriot' in ansible_kernel"

- name: Ensure LSB package installed
  tags: ['system', 'packages', 'apt', 'docker']
  apt:
    pkg: "lsb-release"
    state: present
    install_recommends: no

- name: Set ansible LSB variable
  tags: ['system', 'packages', 'apt', 'docker']
  set_fact:
    lsb_release_name: "{{ ansible_lsb.id | lower }}"

- name: Set docker apt repository url
  tags: ['system', 'packages', 'apt', 'docker']
  set_fact:
    docker_apt_url: "https://download.docker.com/linux/{{ lsb_release_name }}"

- name: Set docker repository release ditribution channel
  tags: ['system', 'packages', 'apt', 'docker']
  set_fact:
    docker_apt_dist: "stable"

- name: Set docker repository source
  tags: ['system', 'packages', 'apt', 'docker']
  set_fact:
    docker_apt_source: "deb {{ docker_apt_url }} {{ ansible_distribution_release }} {{ docker_apt_dist }}"

- name: Add Docker repository key
  tags: ['system', 'packages', 'apt', 'docker']
  apt_key:
    id: "58118E89F3A912897C070ADBF76221572C52609D"
    keyserver: "hkp://p80.pool.sks-keyservers.net:80"
    state: present

- name: Add docker-ce repository signing key
  tags: ['system', 'packages', 'apt', 'docker']
  apt_key:
    id: 0EBFCD88
    url: "https://download.docker.com/linux/{{ lsb_release_name }}/gpg"
    state: present

- name: "Add Docker repository for {{ lsb_release_name }}"
  tags: ['system', 'packages', 'apt', 'docker']
  apt_repository:
    repo: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - "{{ docker_apt_source }}"

- name: Remove Legacy Docker Packages
  tags: ['system', 'packages', 'apt', 'docker']
  apt:
    pkg: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io
    - docker-hypriot
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install docker dependencies
  tags: ['system', 'packages', 'apt', 'docker']
  apt:
    pkg: "{{ item }}"
    state: present
    install_recommends: yes
    update_cache: yes
  with_items:
    - apparmor
    - apt-transport-https
    - ca-certificates
    - curl
    - docker-compose
    - gnupg2
    - software-properties-common
  check_mode: no
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install Docker
  tags: ['system', 'packages', 'apt', 'docker']
  apt:
    pkg: "{{ item }}"
    state: present
    install_recommends: yes
    update_cache: yes
  with_items:
    - docker-ce
    - docker-compose
  check_mode: no
  ignore_errors: "{{ ansible_check_mode }}"

- name: Make sure docker is running
  tags: ['system', 'docker', 'services']
  service:
    name: docker
    state: started
